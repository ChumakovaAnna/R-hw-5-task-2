{"version":3,"sources":["images/image.jpg","icon.svg","data.js","components/News.jsx","components/NewsLink.jsx","components/Course.jsx","components/BannerSmall.jsx","components/SearchLinks.jsx","components/Search.jsx","components/BannerBig.jsx","components/Weather.jsx","components/Timetable.jsx","components/WidgetWithList.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","newsLink","news","id","nanoid","icon","link","text","course","title","rate","changes","bannerSmall","img","image","searchLinks","bannerBig","weather","now","morning","day","visited","programTV","time","channel","program","ether","News","props","className","map","item","key","href","src","alt","NewsLink","data","index","Course","BannerSmall","SearchLinks","Search","type","BannerBig","Weather","Timetable","WidgetWithList","children","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.240bf8d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.17a428f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/icon.616402ed.svg\";","import {nanoid} from \"nanoid\";\nimport image from \"./images/image.jpg\";\n\nexport const newsLink = [\"Сейчас в СМИ\", \"в Германии\", \"Рекомендуем\"];\n\nexport const news = [\n  {id: nanoid(), icon: \"icon\", link: \"#\", text: \"Текст новости\"},\n  {id: nanoid(), icon: \"icon\", link: \"#\", text: \"Текст новости\"},\n  {id: nanoid(), icon: \"icon\", link: \"#\", text: \"Текст новости\"},\n  {id: nanoid(), icon: \"icon\", link: \"#\", text: \"Текст новости\"},\n  {id: nanoid(), icon: \"icon\", link: \"#\", text: \"Текст новости\"}\n];\n\nexport const course = [\n  {title: \"USD MOEX\", rate: \"65.52\", changes: \"+0.09\"},\n  {title: \"EUR MOEX\", rate: \"65.52\", changes: \"+0.09\"},\n  {title: \"НЕФТЬ\", rate: \"65.52\", changes: \"+0.09\"},\n];\n\nexport const bannerSmall = {\n  img: image,\n  title: \"Работа над ошибками\",\n  text: \"Смотрите на Яндексе и запоминайте\",\n  link: \"#\"\n}\n\nexport const searchLinks = [\"Видео\", \"Картинки\", \"Новости\", \"Карты\", \"Маркет\", \"Переводчик\", \"Эфир\", \"еще\"];\n\nexport const bannerBig = {\n  img: \"./\",\n  link: \"#\"\n}\n\nexport const weather = {\n  img: image,\n  now: \"+17\",\n  morning: \"+17\",\n  day: \"+20\"\n}\n\nexport const visited = [\n  {id: nanoid(), title: \"Недвижимость\", text: \"о сталинках\"},\n  {id: nanoid(), title: \"Недвижимость\", text: \"о сталинках\"},\n  {id: nanoid(), title: \"Недвижимость\", text: \"о сталинках\"},\n]\n\nexport const programTV = [\n  {id: nanoid(), time: \"02:00\", channel: \"Discovery\", program: \"Джунгли\"},\n  {id: nanoid(), time: \"02:00\", channel: \"Discovery\", program: \"Джунгли\"},\n  {id: nanoid(), time: \"02:00\", channel: \"Discovery\", program: \"Джунгли\"},\n]\n\nexport const ether = [\n  {id: nanoid(), title: \"Джунгли\", channel: \"Discovery\"},\n  {id: nanoid(), title: \"Джунгли\", channel: \"Discovery\"},\n  {id: nanoid(), title: \"Джунгли\", channel: \"Discovery\"},\n]","/**\n * Компонент для списков новостей по выбранной тематике\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport icon from '../icon.svg';\n\nNews.propTypes = {\n  news: PropTypes.array.isRequired,\n};\n\nfunction News(props) {\n  const {news} = props;\n\n  return (\n    <div className=\"container news\">\n\t\t\t\t{news.map(item => (\n\t\t\t\t\t<a key={item.id} href={item.link} className=\"new\">\n            <img src={icon} alt=\"icon\"></img>\n            {item.text}\n\t\t\t\t\t</a>\n\t\t\t\t))}\n    </div>\n  );\n}\n\nexport default News;","/**\n * Компонент для ссылок на темы новостей\n * @param {*} props \n */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport News from \"./News\"\n\nNewsLink.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\tnews: PropTypes.array.isRequired,\n};\n\nfunction NewsLink(props) {\n\tconst { data } = props;\n\tconst { news } = props;\n\treturn (\n\t\t<>\n\t\t\t<div className=\"container\">\n\t\t\t\t{data.map((item, index) => (\n\t\t\t\t\t<button key={index} href=\"#\" className=\"newsLink\">\n\t\t\t\t\t\t{item}\n\t\t\t\t\t</button>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<News news={news}></News>\n\t\t</>\n\t);\n}\n\nexport default NewsLink;\n","/**\n * Компонент для ссылок на курсы валюты\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nCourse.propTypes = {\n  data: PropTypes.array.isRequired,  \n};\n\nfunction Course(props) {\n  const {data} = props;\n\n  return (\n    <div className=\"container\">\n      {data.map((item, index) => <button key={index} href=\"#\">{item.title} {item.rate} {item.changes}</button>)} \n    </div>\n  );\n}\n\nexport default Course;","/**\n * компонент ля небольшого баннера рекламы\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nBannerSmall.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nfunction BannerSmall({ data }) {\n  return (\n    <div className=\"container bannerSmall\">\n      <img src={data.img} className=\"img_bannerSmall\" alt=\"Стич с мягкой игрушкой\"></img>\n      <button href={data.link}>{data.title}</button>\n      <span>{data.text}</span>\n    </div>\n  );\n}\n\nexport default BannerSmall;","/**\n * Компонент для ссылок над input поиска\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nSearchLinks.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nfunction SearchLinks({data}) {\n  return (\n    <div className=\"container\">\n      {data.map((item, index) => <button href=\"#\" key={index}>{item}</button>)}\n    </div>\n  );\n}\n\nexport default SearchLinks;","/**\n * Компонент для формы поиска\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchLinks from \"./SearchLinks\";\n\nSearch.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nfunction Search({data}) {\n  return (\n    <div className=\"container searchContainer\">\n      <SearchLinks data={data}></SearchLinks>\n      <form>\n        <input type=\"search\" className=\"input_search\"></input>\n        <button>Найти</button>\n      </form>\n      <span>Найдется все! Например, \n        <button href=\"#\">фаза луны</button>\n      </span>\n    </div>\n  );\n}\n\nexport default Search;","/**\n * Компонент для большого рекламного баннера\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nBannerBig.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nfunction BannerBig({data}) {\n  return (\n    <div className=\"container bannerBig\">\n      <a href={data.link}>\n        <img src={data.img} alt=\"большой баннер\" className=\"img_bannerBig\"></img>\n      </a>\n    </div>\n  );\n}\n\nexport default BannerBig;","/**\n * Компонент для прорисовки погоды\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nWeather.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nfunction Weather({data}) {\n  return (\n    <div className=\"container \">\n      <h3>Погода</h3>\n      <div className=\"weather\">\n        <div className=\"weatherNow\">\n          <div className=\"img_weatherNow\"></div> \n          <span>{data.now}</span>\n        </div>\n        <div>\n          <div>утром: {data.morning}</div>\n          <div>днем: {data.day}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Weather;","/**\n * Компонент для расписания\n */\nimport React from 'react';\n\nfunction Timetable() {\n  return (\n    <div className=\"container\">\n      <h3>Карта Германии</h3>\n      <span>Расписание</span>\n    </div>\n  );\n}\n\nexport default Timetable;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nWidgetWithList.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.array.isRequired,\n};\n\nfunction WidgetWithList(props) {\n  const {title} = props;\n  return (\n    <div className=\"container\">\n    <h3>{title}</h3>\n    <ul>\n      {props.children}\n    </ul>\n  </div>\n  );\n}\n\nexport default WidgetWithList;","import React from 'react';\nimport './App.css';\nimport * as data from \"./data\";\nimport NewLink from \"./components/NewsLink\";\nimport Course from \"./components/Course\";\nimport BannerSmall from \"./components/BannerSmall\";\nimport Search from \"./components/Search\";\nimport BannerBig from \"./components/BannerBig\";\nimport Weather from \"./components/Weather\";\nimport Timetable from \"./components/Timetable\";\nimport Widget from \"./components/WidgetWithList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <div>\n          <NewLink data={data.newsLink} news={data.news}></NewLink>\n          <Course data={data.course}></Course>\n        </div>\n        <BannerSmall data={data.bannerSmall}></BannerSmall>\n      </div>\n      <div className=\"search\">\n        <Search data={data.searchLinks}></Search>\n      </div>\n      <BannerBig data={data.bannerBig}></BannerBig>\n      <div className=\"footer\">\n        <Weather data={ data.weather }></Weather>\n        <Timetable></Timetable>\n        <Widget title={\"Эфир\"}>\n          {data.ether.map(item => \n            <li key={item.id}>\n              <span>{item.title}</span>\n              <span>{item.channel}</span>\n            </li>)}\n        </Widget>\n        <Widget title={\"Посещаемое\"}>\n          {data.visited.map(item => \n            <li key={item.id}>\n              <span>{item.title}</span>\n              <span>-</span>\n              <span>{item.text}</span>\n            </li>)}\n        </Widget>\n        <Widget title={\"Телепрограмма\"}>\n          {data.programTV.map(item => \n            <li key={item.id}>\n              <span>{item.time}</span>\n              <span>{item.program}</span>\n              <span>{item.channel}</span>\n            </li>)}\n        </Widget>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}